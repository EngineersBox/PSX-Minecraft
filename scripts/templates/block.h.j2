#pragma once

#ifndef _PSX_MINECRAFT__GAME_BLOCKS__BLOCK_{{ name_snake_upper }}_H_
#define _PSX_MINECRAFT__GAME_BLOCKS__BLOCK_{{ name_snake_upper }}_H_

#include <interface99.h>

#include "block.h"

DEFN_BLOCK_STATELESS({{ name_snake_upper }}, {{ name_capital }}Block);

IBlock* {{ name_lower }}BlockCreate();

#define {{ name_lower }}BlockCreateAttributes() ((BlockAttributes) { \
    .slipperiness = {{ slipperiness }}, \
    .hardness = {{ hardness }}, \
    .resistance = {{ resistance }}, \
    .name = "{{ name_snake_lower }}" \
})

void {{ name_lower }}BlockInit(VSelf);
void {{ name_capital }}Block_init(VSelf);

void {{ name_lower }}BlockAccess(VSelf);
void {{ name_capital }}Block_access(VSelf);

ALLOC_CALL(itemDestroy, 1) IItem* {{ name_lower }}BlockDestroy(VSelf);
ALLOC_CALL(itemDestroy, 1) IItem* {{ name_capital }}Block_destroy(VSelf);

void {{ name_lower }}BlockUpdate(VSelf);
void {{ name_capital }}Block_update(VSelf);

ALLOC_CALL(itemDestroy, 1) IItem* {{ name_lower }}BlockProvideItem(VSelf);
ALLOC_CALL(itemDestroy, 1) IItem* {{ name_capital }}Block_provideItem(VSelf);

{% if opaque_bitset != None %}
#define {{ name_capital }}Block_isOpaque_CUSTOM ()
bool {{ name_lower }}BlockIsOpaque(VSelf, FaceDirection face_dir);
bool {{ name_capital }}Block_isOpaque(VSelf, const FaceDirection face_dir);

#define {{ name_capital }}Block_opaqueBitset_CUSTOM ()
u8 {{ name_lower }}BlockOpaqueBitset(VSelf);
u8 {{ name_capital }}Block_opaqueBitset(VSelf);
{% endif %}

impl(IBlock, {{ name_snake_upper }}Block);

#endif // _PSX_MINECRAFT__GAME_BLOCKS__BLOCK_{{ name_snake_upper }}_H_
