#pragma once

#ifndef _PSXMC__GAME_BLOCKS__BLOCK_{{ name_snake_upper }}_H_
#define _PSXMC__GAME_BLOCKS__BLOCK_{{ name_snake_upper }}_H_

#include <interface99.h>

#include "block.h"
{% if stateful -%}
DEFN_BLOCK_STATEFUL({ name_capital }}Block);
{%- else -%}
DEFN_BLOCK_STATELESS({{ name_capital }}Block, {{ name_snake_upper }});
{%- endif %}

DEFN_BLOCK_CONSTRUCTOR({{ name_lower }});

#define {{ name_lower }}BlockCreateAttributes() ((BlockAttributes) { \
    .slipperiness = {{ slipperiness }}, \
    .hardness = {{ hardness }}, \
    .resistance = {{ resistance }}, \
    .type = {{ type }}, \
    .tool_type = {{ tool_type }}, \
    .tool_material = {{ tool_material }}, \
    .can_harvest = toolTypeBitset({{ can_harvest_bitset }}), \
    .propagates_sunlight = {% if propagates_sunlight %} true {% else %} false {% endif %}, \
    .propagates_blocklight = {% if propagates_blocklight %} true {% else %} false {% endif %}, \
    {% if face_attributes -%}
    .face_attributes {{ name_snake_upper }}_FACE_ATTRIBUTES, \
    {%- endif %}
    .name = "{{ name_snake_lower }}" \
})

{% if face_attributes -%}
#define {{ name_lower }}BlockFaceAttributes() P99_PROTECT({\
{% for attr in face_attributes -%}
    {% if attr.tinted -%}
    defaultTintedFaceAttributes({{ attr.value }})
    {%- else -%}
    defaultFaceAttributes({{ attr.value }})
    {%- endif %}
    {%- if not loop.last -%} ,
    {%- endif %} \
{% endfor %}})
{%- endif %}

void {{ name_lower }}BlockInit(VSelf);
void {{ name_capital }}Block_init(VSelf);

void {{ name_lower }}BlockAccess(VSelf);
void {{ name_capital }}Block_access(VSelf);

ALLOC_CALL(itemDestroy, 1) IItem* {{ name_lower }}BlockDestroy(VSelf, bool drop_item);
ALLOC_CALL(itemDestroy, 1) IItem* {{ name_capital }}Block_destroy(VSelf, bool drop_item);

void {{ name_lower }}BlockUpdate(VSelf);
void {{ name_capital }}Block_update(VSelf);

ALLOC_CALL(itemDestroy, 1) IItem* {{ name_lower }}BlockProvideItem(VSelf);
ALLOC_CALL(itemDestroy, 1) IItem* {{ name_capital }}Block_provideItem(VSelf);

{% if has_use_action -%}
#define {{ name_capital }}Block_useAction_CUSTOM ()
bool {{ name_lower }}BlockUseAction(VSelf);
bool {{ name_capital }}Block_useAction(VSelf);
{%- endif %}

impl(IBlock, {{ name_capital }}Block);

#endif // _PSXMC__GAME_BLOCKS__BLOCK_{{ name_snake_upper }}_H_
